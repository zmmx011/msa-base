server:
  port: 8000
eureka:
  instance:
    preferIpAddress: true # 서비스 이름 대신 서비스 IP주소 등록
  client:
    serviceUrl:
      defaultZone: ${EUREKASERVER_URI:http://localhost:8761/eureka} # 유레카 서비스 위치
spring:
  application:
    name: api-gateway
  cloud:
    inetutils:
      ignored-interfaces:
        - eth0*
        - eth2*
    gateway:
      routes:
        - id: licensing-service
          uri: lb://LICENSINGSERVICE
          predicates:
            - Path=/licensing-service/**
        - id: organization-service
          uri: lb://ORGANIZATIONSERVICE
          predicates:
            - Path=/organization-service/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - TokenRelay=
            - RemoveRequestHeader=Cookie
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: spring-gateway-client
            client-secret: 746f79e6-5520-4943-8129-23ae42838d33
            authorization-grant-type: authorization_code
            redirect-uri: ${KEYCLOAK_REDIRECT_URI:http://localhost:8000}/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${KEYCLOAK_URI:http://localhost:8080/auth}/realms/${KEYCLOAK_REALM:service}/protocol/openid-connect/auth
            token-uri: ${KEYCLOAK_URI:http://localhost:8080/auth}/realms/${KEYCLOAK_REALM:service}/protocol/openid-connect/token
            user-info-uri: ${KEYCLOAK_URI:http://localhost:8080/auth}/realms/${KEYCLOAK_REALM:service}/protocol/openid-connect/userinfo
            jwk-set-uri: ${KEYCLOAK_URI:http://localhost:8080/auth}/realms/${KEYCLOAK_REALM:service}/protocol/openid-connect/certs
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_URI:http://localhost:8080/auth}/realms/${KEYCLOAK_REALM:service}/protocol/openid-connect/certs
logging:
  level:
    root: WARN
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
